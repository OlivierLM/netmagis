#!%TCLSH%

#
# Display DHCP parameters for a network
#
# Called by: dhcp or dchpsel
#
# Parameters (form or url):
#   - idreseau : selected network id
#
# History
#   2004/10/05 : pda/jean : design
#   2010/12/10 : pda      : i18n
#

#
# Next actions
# 

set conf(next)		"dhcpmodif"

#
# Script parameters
#

set conf(form)	{
	{idreseau	1 1}
}

#
# Template pages used by this script
#

set conf(err)		erreur.html
set conf(page)		dhcpedit.html

#
# WebDNS general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "dns" $conf(err) "" $conf(form) ftab dbfd login tabuid

    set idgrp $tabuid(idgrp)

    #
    # Check network
    #

    set idnet [string trim [lindex $ftab(idreseau) 0]]
    set lcidr [check-netid $dbfd $idnet $idgrp "dhcp" 4 msg]
    if {[llength $lcidr] == 0} then {
	d error $msg
    }
    if {[llength $lcidr] != 1} then {
	d error [mc "Internal error: too many CIDR found"]
    }

    #
    # Prepare tabular data
    #

    set cwidth {25 25 20 10 10 10}
    set ctitle [list \
			[list "text" [mc "Min"]] \
			[list "text" [mc "Max"]] \
			[list "text" [mc "Domain"]] \
			[list "text" [mc "Default lease duration"]] \
			[list "text" [mc "Maximum lease duration"]] \
			[list "text" [mc "DHCP profile"]] \
		    ]

    set menudom {}
    set sql "SELECT d.iddom, d.nom FROM dns.domaine d, dns.dr_dom dr
			WHERE d.iddom = dr.iddom
				AND dr.idgrp = $idgrp
			ORDER BY dr.tri ASC, d.nom ASC"
    pg_select $dbfd $sql tab {
	lappend menudom [list $tab(iddom) $tab(nom)]
    }

    set menudhcp {}
    set sql "	(SELECT 0 AS iddhcpprofil, 'Aucun profil' AS nom)
		UNION
		(SELECT p.iddhcpprofil AS iddhcpprofil, p.nom AS nom
		    FROM dns.dr_dhcpprofil dr, dns.dhcpprofil p, global.corresp c
		    WHERE c.idcor = $tabuid(idcor)
			AND dr.idgrp = c.idgrp
			AND dr.iddhcpprofil = p.iddhcpprofil
		    ORDER BY dr.tri ASC)
		ORDER BY nom"
    pg_select $dbfd $sql tab {
	lappend menudhcp [list $tab(iddhcpprofil) $tab(nom)]
    }

    set spec {
	    {min		{string 15}	{}}
	    {max		{string 15}	{}}
	    {iddom		{menu {%MENUDOM%}}	{}}
	    {default_lease_time	{string 10}	0}
	    {max_lease_time	{string 10}	0}
	    {iddhcpprofil	{menu {%MENUDHCP%}}	0}
	}
    regsub -- "%MENUDOM%" $spec "$menudom" spec
    regsub -- "%MENUDHCP%" $spec "$menudhcp" spec
    set sql "SELECT * FROM dns.dhcprange
			WHERE min <<= '$lcidr'
			    AND max <<= '$lcidr'
			    AND valide_dhcprange_grp ($idgrp, min, max)
			ORDER BY min"
    set id iddhcprange

    set msg [display-tabular $cwidth $ctitle $spec $dbfd $sql $id tableau]
    if {$msg ne ""} then {
	d error $msg
    }

    #
    # End of script: output page and close database
    #

    d urlset "%URLFORM%" $conf(next) {}
    d result $conf(page) [list \
				[list %IDRESEAU% $idnet] \
				[list %RESEAU% $lcidr] \
				[list %TABLEAU% $tableau] \
			    ]
}

::webapp::cgi-exec main $debug
