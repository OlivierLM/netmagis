#!%TCLSH%

#
# Choose which type of modification to apply to an IP address.
#
# Called by: liste (address map)
#
# Parameters (form or url):
#   - adr: IP address (v4 at this time)
#
# History
#   2010/10/10 : pda      : specification
#   2010/12/11 : pda      : i18n
#   2010/12/25 : pda      : use cgi-dispatch
#

#
# Template pages used by this script
#

set conf(page)		edit.html

#
# Next actions
# 

set conf(nextdel)	"del"
set conf(nextmod)	"mod"
set conf(nextlist)	"net"

#
# Netmagis general library
#

source %LIBNETMAGIS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

d cgi-register {} {
    {adr	1 1}
} {
    global conf

    #
    # Check parameters
    #

    set addr $adr

    set msg [check-ip-syntax $dbfd $addr "inet"]
    if {$msg ne ""} then {
	d error $msg
    }

    #
    # Check that IP address belongs to one of our networks
    #

    set idcor $tabuid(idcor)

    if {! [check-authorized-ip $dbfd $idcor $addr]} then {
	d error [mc "You don't have rights on '%s'" $addr]
    }

    #
    # Check that given address exists, and get all related information.
    #

    if {! [read-rr-by-ip $dbfd $addr trr]} then {
	d error [mc "Address '%s' not found" $addr]
    }

    #
    # Check access to this name
    #

    set name   $trr(nom)
    set domain $trr(domaine)
    set msg [check-authorized-host $dbfd $idcor $name $domain bidon "del-name"]
    if {$msg ne ""} then {
	d error $msg
    }

    #
    # Is there only one IP address for this host?
    # If only 1 : delete address is equivalent to delete the host name
    # If more than 1 : delete address only delete *one* address
    # This test is made only to differentiate message "delete one
    # IP address but do not delete name"
    #

    if {[llength $trr(ip)] == 1} then {
	# do not display action
	set dispuneip "none"
    } else {
	# display action
	set dispuneip "block"
    }

    #
    # Prepare information display
    #

    set machine [display-rr $dbfd -1 trr {}]

    #
    # Prepare next actions
    #

    d urlset "%URLSUPPR%" $conf(nextdel) [list \
						[list "action" "del-name"] \
						[list "confirm" "yes"] \
						[list "nom" $name] \
						[list "domaine" $domain] \
					    ]
    d urladdnext "%URLSUPPR%"

    d urlset "%URLSUPPRIP%" $conf(nextdel) [list \
						[list "action" "del-ip"] \
						[list "confirm" "yes"] \
						[list "adr" $addr] \
					    ]
    d urladdnext "%URLSUPPRIP%"

    d urlset "%URLEDIT%" $conf(nextmod) [list \
						[list "action" "edit"] \
						[list "nom" $name] \
						[list "domaine" $domain] \
					    ]
    d urladdnext "%URLEDIT%"

    switch -- [d nextprog] {
	map { set format "domap" }
	list -
	default { set format "dolist" }
    }
    d urlset "%URLBACK%" $conf(nextlist) [list \
						[list $format "yes"] \
						[d nextargs] \
					    ]

    #
    # End of script: output page and close database
    #

    d result $conf(page) [list \
				[list %ADR%         $addr] \
				[list %NOM%         $name] \
				[list %DOMAINE%     $domain] \
				[list %MACHINE%     $machine] \
				[list %DISPUNEIP%   $dispuneip] \
			    ]
}

##############################################################################
# Main procedure
##############################################################################

d cgi-dispatch "dns" ""

