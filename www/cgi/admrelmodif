#!%TCLSH%

#
# Store a modification of mail relay
#
# Called by: admrefliste
#
# Parameters (form or url): none
#
# History
#   2004/03/04 : pda/jean : design
#   2007/10/25 : jean     : log modify actions
#   2010/12/09 : pda      : i18n
#

#
# Template pages used by this script
#

set conf(err)		erreur.html
set conf(page)		admrelmodif.html

#
# Script parameters
#

set conf(form) {
	{domaine		1 1}

	{priorite[0-9]+		0 9999}
	{nom[0-9]+		0 9999}
	{domaine[0-9]+		0 9999}

	{prioriten[0-9]+	0 9999}
	{nomn[0-9]+		0 9999}
	{domainen[0-9]+		0 9999}
}

set conf(tableau) {
    global {
	chars {12 normal}
	columns {20 80}
	botbar {yes}
	align {left}
    }
    pattern Title {
	title {yes}
	topbar {yes}
	chars {bold}
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
    pattern Normal {
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
}

#
# Netmagis general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit


##############################################################################
# Utilities
##############################################################################

#
# Insert a list of mail relays in the database
#
# Input:
#   - parameters:
#	- dbfd : database handle
#	- iddom : domain id
#	- lrel : list of relays
# Output:
#   - return value: empty string or error message
#
# History
#   2004/03/04 : pda/jean : copy from MX function
#

proc insert-relay {dbfd iddom lrel} {
    foreach rel $lrel {
	lassign $rel prio idmx
	set sql "INSERT INTO dns.relais_dom (iddom, priorite, mx)
				    VALUES ($iddom, $prio, $idmx)"
	if {! [::pgsql::execsql $dbfd $sql msg]} then {
	    return [mc "Relay insertion failed: %s" $msg]
	}
    }
    return ""
}

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "admin" $conf(err) "admin" $conf(form) ftab dbfd login tabuid

    set domain [string trim [lindex $ftab(domaine) 0]]

    #
    # Check domain
    #

    set iddom -1
    set msg [check-domain-relay $dbfd $tabuid(idcor) iddom $domain]
    if {$msg ne ""} then {
	d error $msg
    }

    #
    # Traverse list of form variables and build a list:
    #		{{prio idmx} ... }
    # where :
    #  - prio = numeric priority
    #  - idmx = id of an existing RR
    #

    set lrel {}
    foreach c [array names ftab] {
	if {[regexp {^priorite(n?)([0-9]+)$} $c bidon n idmx]} then {
	    set idxprio priorite$n$idmx
	    set idxnom  nom$n$idmx
	    set idxdom  domaine$n$idmx
	    if {[info exists ftab($idxprio)] && \
			    [info exists ftab($idxnom)] && \
			    [info exists ftab($idxdom)] \
		    } then {
		set fprio [string trim [lindex $ftab($idxprio) 0]]
		set fname [string trim [lindex $ftab($idxnom)  0]]
		set fdom  [string trim [lindex $ftab($idxdom)  0]]
		if {$fprio ne ""} then {
		    set mx [check-mx-target $dbfd $fprio $fname $fdom $tabuid(idcor) msg]
		    if {$msg ne ""} then {
			d error $msg
		    }
		    if {[info exists tmx([lindex $mx 1])]} then {
			d error [mc "'%s' specified more than once" "$fname.$fdom"]
		    }
		    lappend lrel $mx
		}
	    } else {
		d error [mc "Invalid form values (%s)" "$idxprio, $idxnom, $idxdom"]
	    }
	}
    }

    #
    # Start transaction
    #

    d dblock {}

    #
    # First, delete all previous relays
    #

    set sql "DELETE FROM dns.relais_dom WHERE iddom = $iddom"
    if {! [::pgsql::execsql $dbfd $sql msg]} then {
	d dbabort [mc "delete %s" [mc "old mail relays"]] $msg
    }

    #
    # Insert relay RRs
    #

    set msg [insert-relay $dbfd $iddom $lrel]
    if {$msg ne ""} then {
	d dbabort [mc "add %s" [mc "new mail relays"]] $msg
    }

    #
    # Unlock and commit modifications
    #

    d dbcommit [mc "modify %s" [mc "mail relays"]]

    #
    # Present informations stored in database
    #

    set lm {}
    if {[llength $lrel] > 0} then {
	set lines {}
	lappend lines [list "Title" [mc "Priority"] [mc "Name"]]
	foreach mx $lrel {
	    lassign $mx prio idmx
	    read-rr-by-id $dbfd $idmx tabmx
	    set n "$tabmx(nom).$tabmx(domaine)"
	    lappend lines [list Normal $prio $n]
	    lappend lm $n
	}
	set tableau [::arrgen::output "html" $conf(tableau) $lines]
	d writelog "modrelay" "relay replacement for $domain: [join $lm {, }]"
    } else {
	set tableau [mc "Mail relays deleted"]
	d writelog "modrelay" "relay deleted for $domain"
    }

    #
    # End of script: output page and close database
    #

    d result $conf(page) [list \
				[list %TABLEAU% $tableau] \
				[list %DOMAINE% $domain] \
			    ]
}

::webapp::cgi-exec main $debug
