#!%TCLSH%

#
# Display per organization statistics
#
# Called by: admin
#
# Parameters (form or url): none
#
# History
#   2002/07/25 : pda      : design
#   2003/05/13 : pda/jean : use auth base
#   2004/01/14 : pda/jean : add IPv6
#   2010/12/13 : pda      : i18n
#

#
# Template pages used by this script
#

set conf(page)		statetab.html

#
# Tabular specification
# Columns
#	organization
#	number of declared RR in this organization networks
#	percentage of declared RR vs total
#	number of allocated address in this organization networks
#	percentage of allocated address vs total
#

set conf(tabmachetabl) {
    global {
	chars {10 normal}
	columns {40 15 15 15 15}
	botbar {yes}
	align {right}
    }
    pattern Title {
	align {center}
	title {yes}
	topbar {yes}
	chars {bold}
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
    pattern Normal {
	title {yes}
	vbar {yes}
	column {
	    align {left}
	}
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
    pattern Total {
	title {yes}
	chars {bold}
	vbar {yes}
	column {
	    align {left}
	}
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
}

#
# Netmagis general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    d init-cgi "admin" "admin" {} ftab dbfd tabuid

    #
    # Address count (v4 or v6) declared by organization
    #

    set sql "SELECT e.nom,
		    COUNT (rr_ip.adr) AS declared
		FROM dns.etablissement e, dns.rr_ip
		WHERE rr_ip.adr << ANY
		    (SELECT adr4 FROM dns.reseau WHERE reseau.idetabl = e.idetabl
			UNION
		     SELECT adr6 FROM dns.reseau WHERE reseau.idetabl = e.idetabl)
		GROUP BY e.nom
		"
    set totaldecl 0
    pg_select $dbfd $sql tab {
	set e $tab(nom)
	set n $tab(declared)
	set etabl($e) [list $n 0]
	incr totaldecl $n
    }

    #
    # Allocated IPv4 addresses count
    #

    set sql "SELECT e.nom,
		    SUM (2^(32 - MASKLEN (r.adr4))) AS allocated
		FROM dns.etablissement e, dns.reseau r
		WHERE e.idetabl = r.idetabl
		GROUP BY e.nom
		"
    set totalalloc 0
    pg_select $dbfd $sql tab {
	set e $tab(nom)
	set n $tab(allocated)
	if {[info exists etabl($e)]} then {
	    set etabl($e) [list [lindex $etabl($e) 0] $n]
	} else {
	    set etabl($e) [list 0 $n]
	}
	incr totalalloc $n
    }

    #
    # Display in tabular format
    #

    set lines {}
    lappend lines [list "Title" \
			[mc "Organization"] \
			[mc "Declared hosts"] \
			[mc "Percentage"] \
			[mc "Allocated addresses"] \
			[mc "Percentage"] \
		    ]
    set ptotaldecl 0.0
    set ptotalalloc 0.0
    foreach e [lsort [array names etabl]] {
	lassign $etabl($e) ndecl nalloc
	set pcentdecl  [expr "$ndecl*100.0/$totaldecl"]
	set pcentalloc [expr "$nalloc*100.0/$totalalloc"]
	lappend lines [list "Normal" $e \
				$ndecl  [format "%5.2f" $pcentdecl] \
				$nalloc [format "%5.2f" $pcentalloc] \
			    ]
	set ptotaldecl [expr $ptotaldecl + $pcentdecl]
	set ptotalalloc [expr $ptotalalloc + $pcentalloc]
    }

    lappend lines [list "Total" [mc "Total"] \
				$totaldecl  [format "%5.2f" $ptotaldecl] \
				$totalalloc [format "%5.2f" $ptotalalloc] \
			    ]

    set nbmachetabl [::arrgen::output "html" $conf(tabmachetabl) $lines]

    #
    # End of script: output page and close database
    #

    d result $conf(page) [list \
				[list %NBMACHETABL% $nbmachetabl] \
			    ]
}

::webapp::cgi-exec main $debug
