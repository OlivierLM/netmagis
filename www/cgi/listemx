#!%TCLSH%

#
# List all MX in one domain
#
# Called by: consultmx
#
# Parameters (form or url):
#   - selection criteria
#	- domaine : domain list
#   - output format
#	- dolist or doprint
#
# History
#   2002/05/25 : pda      : design
#   2002/07/09 : pda      : add nologin
#   2002/10/24 : pda      : use common template file
#   2003/05/13 : pda/jean : use auth base
#   2010/12/12 : pda      : i18n
#

#
# Template pages used by this script
#

set conf(liste)		listedes.html
set conf(listetex)	listedes.tex
set conf(err)		erreur.html

#
# Script parameters
#

set conf(form)		{
	{domaine	0 99999}
	{dolist		0 1}
	{doprint	0 1}
}

#
# tabular specification for result
# Columns:
#	- host
#	- priority
#	- MX
#

set conf(tableau) {
    global {
	chars {12 normal}
	columns {45 10 45}
	botbar {yes}
	align {left}
    }
    pattern Title {
	title {yes}
	topbar {yes}
	chars {12 bold}
	align {center}
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
	column { }
	vbar {yes}
    }
    pattern Domain {
	chars {12 bold}
	align {center}
	vbar {yes}
	column {
	    multicolumn {3}
	}
	vbar {yes}
    }
    pattern NoMX {
	align {left}
	vbar {yes}
	column {
	    multicolumn {3}
	}
	vbar {yes}
    }
    pattern MX {
	vbar {yes}
	column {
	    botbar {no}
	}
	vbar {yes}
	column {
	    align {right}
	}
	vbar {yes}
	column { }
	vbar {yes}
    }
    pattern LastMX {
	vbar {yes}
	column { }
	vbar {yes}
	column {
	    align {right}
	}
	vbar {yes}
	column { }
	vbar {yes}
    }
}

#
# Netmagis general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "admin" $conf(err) "admin" $conf(form) ftab dbfd login tabuid

    #
    # Arguments
    #

    # output format
    if {[lindex $ftab(doprint) 0] ne ""} then {
	set format latex
    } else {
	# default case: dolist or anything else
	set format html
    }

    foreach d $ftab(domaine) {
	set iddom [read-domain $dbfd $d]
	if {$iddom == -1} then {
	    d error [mc "Domain '%s' not found" $d]
	}
	set tabdom($d) $iddom
    }

    #
    # List MX for each domain
    #

    set lines {}
    lappend lines [list "Title" \
			    [mc "Name"] \
			    [mc "Priority"] \
			    [mc "MX"] \
			]
    foreach d [lsort $ftab(domaine)] {
	lappend lines [list "Domain" $d]
	set iddom $tabdom($d)

	#
	# Extract MX of domain, and store into a temporary variable.
	#   tabmx(foo.u-strasbg.fr) = {{10 mx1.u-strasbg.fr} {20 mx2...}}
	#

	catch {unset tabmx}
	set sql "SELECT r1.nom || '.' || d1.nom AS left,
			m.priorite,
			r2.nom || '.' || d2.nom AS right
		    FROM dns.rr r1, dns.domaine d1, dns.rr_mx m, dns.rr r2, dns.domaine d2
		    WHERE r1.iddom = d1.iddom
			AND r1.idrr = m.idrr
			AND m.mx = r2.idrr
			AND r2.iddom = d2.iddom
			AND r1.iddom = $iddom
		    ORDER BY r1.nom ASC, m.priorite ASC"
	pg_select $dbfd $sql tab {
	    set left  $tab(left)
	    set prio  $tab(priorite)
	    set right $tab(right)
	    lappend tabmx($left) [list $prio $right]
	}

	#
	# Process each MX
	#

	set lmx [lsort [array names tabmx]]
	if {[llength $lmx] == 0} then {
	    lappend lines [list "NoMX" [mc "(no MX for this domain)"]]
	} else {
	    foreach mx [lsort [array names tabmx]] {
		set n [llength $tabmx($mx)]
		for {set i 0} {$i < $n} {incr i} {
		    lassign $tabmx($mx) prio right

		    # output MX name only once
		    if {$i == 0} then {
			set left $mx
		    } else {
			set left ""
		    }

		    # do not display horizontal line under MX name,
		    # except for the last one
		    if {$i < $n - 1} then {
			set pattern "MX"
		    } else {
			set pattern "LastMX"
		    }

		    lappend lines [list $pattern $left $prio $right]
		}
	    }
	}
    }

    set tableau [::arrgen::output $format $conf(tableau) $lines]

    #
    # End of script: output page and close database
    #

    set datefmt [dnsconfig get "datefmt"]
    set date  [clock format [clock seconds] -format $datefmt]
    switch -- $format  {
	html	{
	    d result $conf(liste) [list \
					[list %TITRE%	"MX"] \
					[list %TXT%	""] \
					[list %TABLEAU%	$tableau] \
					[list %DATE%	$date] \
				    ]
	}
	latex	{
	    d result $conf(listetex) [list \
					[list %ORIENTATION% "portrait"] \
					[list %TITRE%	"MX"] \
					[list %TXT%	""] \
					[list %TABLEAU%	$tableau] \
					[list %DATE%	$date] \
				    ]
	}
    }
}

::webapp::cgi-exec main $debug
