#!%TCLSH%

#
# Display page for adding machine or alias
#
# Called by: accueil, liste, traiteajout
#
# Parameters (form or url):
#   - when called from accueil : none
#   - when called from free address map (script liste)
#	- adr: IP address
#   - when called from free address list (script traiteajout)
#	XXX
#
#
# History
#   2002/04/11 : pda/jean : design
#   2002/05/03 : pda/jean : separate in a particular page
#   2002/07/09 : pda      : add nologin
#   2003/05/13 : pda/jean : use auth base
#   2005/04/08 : pda/jean : add DHCP profile
#   2008/07/23 : pda/jean : add SMTP authorization
#   2009/12/31 : pda      : add multiple add
#   2010/10/08 : pda      : add next action
#   2010/10/31 : pda      : add ttl
#   2010/12/09 : pda      : i18n
#

#
# Template pages used by this script
#

set conf(page)		ajout.html
set conf(pageadr)	ajout-adr.html
set conf(err)		erreur.html

#
# Next actions
# 

set conf(next)		"traiteajout"

#
# Script parameters
#

set conf(form)	{
	{adr		0 1}
}

#
# Netmagis general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "dns" $conf(err) "" $conf(form) ftab dbfd tabuid

    #
    # Get host types
    #

    set menuhinfo [menu-hinfo $dbfd hinfo ""]

    #
    # Get SMTP authorization, in order to display (or not display)
    # authorization button
    #

    lassign [menu-droitsmtp $dbfd "droitsmtp" tabuid 0] \
				droitsmtplibelle droitsmtpmenu

    #
    # Get TTL permission in order to display (or not display) TTL field
    #

    lassign [menu-ttl $dbfd "ttl" tabuid ""] ttllibelle ttlval

    #
    # Get authorized domains
    #

    set domaine    [menu-domain $dbfd $tabuid(idcor) domaine    "" ""]
    set domaineref [menu-domain $dbfd $tabuid(idcor) domaineref "" ""]

    #
    # Get DHCP profile informations
    #

    lassign [menu-dhcp-profile $dbfd "iddhcpprofil" $tabuid(idcor) 0] \
				dhcpprofillibelle dhcpprofilmenu 

    #
    # Get network addresses
    #

    set lnet [read-networks $dbfd $tabuid(idgrp) "consult"]
    set taille [llength $lnet]
    if {$taille == 0} then {
	set menuplage [mc "No authorized network"]
    } else {
	set menuplage [::webapp::form-menu "plage" 1 0 $lnet {}]
    }

    #
    # Is an address already provided?
    #

    set addr [string trim [lindex $ftab(adr) 0]]
    if {$addr eq ""} then {
	# no: show rest of page
	set display "block"
    } else {
	# yes: hide rest of page
	set display "none"
    }

    #
    # Next scripts
    #

    d urlset "%URLFORM1%" $conf(next) {}
    d urladdnext "%URLFORM1%"
    d urlset "%URLFORM2%" $conf(next) {}

    #
    # End of script: output page and close database
    #

    d result $conf(page) [list \
				[list %DOMAINE% $domaine] \
				[list %DOMAINEREF% $domaineref] \
				[list %MENUHINFO% $menuhinfo] \
				[list %TTLLIBELLE% $ttllibelle] \
				[list %TTLVAL% $ttlval] \
				[list %DROITSMTPLIBELLE% $droitsmtplibelle] \
				[list %DROITSMTPMENU% $droitsmtpmenu] \
				[list %DHCPPROFILLIBELLE% $dhcpprofillibelle] \
				[list %DHCPPROFILMENU% $dhcpprofilmenu] \
				[list %MENUPLAGE% $menuplage] \
				[list %DISPLAY% $display] \
				[list %ADR% $addr] \
			    ]
}

::webapp::cgi-exec main $debug
