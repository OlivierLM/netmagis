#!%TCLSH%

#
# Store new parameters in database
#
# Called by: admparliste
#
# Parameters (form or url): parameters
#
# History
#   2003/12/08 : pda      : design from sos code
#   2004/10/13 : pda      : add DHCP parameters
#   2007/10/25 : jean     : log modify actions
#   2010/12/09 : pda      : i18n
#

#
# Template pages used by this script
#

set conf(err)		erreur.html
set conf(page)		admvalide.html

#
# Next actions
# 

set conf(nextaccueil)	"%HOMEURL%/bin/accueil"
set conf(nextadmin)	"%HOMEURL%/bin/admin"
set conf(nextmodif)	"%HOMEURL%/bin/admparliste"

#
# WebDNS general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "admin" $conf(err) "admin" {} ftab dbfd login tabuid

    #
    # Creation of a form variable specification from configuration keys
    #

    set form {}
    foreach key [dnsconfig keys] {
	lappend form [list $key 1 1]
    }
    if {[llength [::webapp::get-data ftab $form]] == 0} then {
	d error [mc "Invalid input"]
    }

    #
    # Store new values
    #

    if {! [::pgsql::lock $dbfd {global.config} msg]} then {
	d error [format [mc "Unable to lock table (%s)"] $msg]
    }

    set lm {}
    foreach key [dnsconfig keys] {
	set val [lindex $ftab($key) 0]
	set msg [dnsconfig set $key $val]
	if {[string equal $msg ""]} then {
	    lappend lm "$key ($val)"
	} else {
	    ::pgsql::unlock $dbfd "abort" m
	    d error [format [mc {Store parameter '%1$s' failed: %2$s}] $key $msg]
	}
    }

    if {! [::pgsql::unlock $dbfd "commit" msg]} then {
	d error [format [mc "Unlock failed, modification failed: %s"] $msg]
    }

    d writelog "admparmod" "modify parameters: [join $lm ,]"

    #
    # End of script: output page and close database
    #

    set type [mc "return to application parameter modification"]

    d urlset "%URL1%" $conf(nextaccueil) {}
    d urlset "%URL2%" $conf(nextadmin) {}
    d urlset "%URL3%" $conf(nextmodif) {}

    d result $conf(page) [list \
				[list %TYPEENCLAIR% $type] \
			    ]
}

::webapp::cgi-exec main %DEBUG%
