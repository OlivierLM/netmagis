#!%TCLSH%

#
# Script pour forcer la génération d'une ou plusieurs zones.
#
# Appelé par : admgenliste
#
# Paramètres (formulaire ou URL) :
#	- zones : liste de noms de zones à générer
#
# Historique
#   2002/05/23 : pda/jean : création
#   2002/07/09 : pda      : ajout de nologin
#   2003/05/13 : pda/jean : utilisation de la base d'authentification
#

set conf(homeurl)	%HOMEURL%

#
# Chemins utilisés par les scripts
#

set conf(pkg)		%PKGTCL%
set conf(lib)		%DESTDIR%/lib
set conf(libdns)	$conf(lib)/libdns.tcl

#
# Définition des noms des pages "à trous"
#

set conf(err)		$conf(lib)/erreur.html
set conf(page)		$conf(lib)/admgenset.html

#
# Quelques paramètres du script
#

set conf(auth)		%AUTH%
set conf(base)		%BASE%
set conf(nologin)	%NOLOGIN%

set conf(form)	{
    {zones		0 9999}
}

#
# Les outils du parfait concepteur de pages Web dynamiques...
#

lappend auto_path $conf(pkg)
package require auth
package require webapp
package require pgsql

#
# On y va !
#

# ::webapp::cgidebug ; exit

source $conf(libdns)

##############################################################################
# Programme principal
##############################################################################

proc main {} {
    global conf

    #
    # Initialisation
    #

    init-dns $conf(nologin) $conf(auth) $conf(base) $conf(err) "admin" \
			$conf(form) ftab dbfd login tabcor

    #
    # Forcer la génération
    #

    if {! [::pgsql::lock $dbfd {zone} msg]} then {
	::webapp::error-exit $conf(err) "Transaction impossible : $msg"
    }

    foreach z $ftab(zones) {
	set qz [::pgsql::quote $z]
	set sql "UPDATE zone SET generer = 1 WHERE domaine = '$qz'"
	if {! [::pgsql::execsql $dbfd $sql msg]} then {
	    ::pgsql::unlock $dbfd "abort" m
	    ::webapp::error-exit $conf(err) "Échec pour la zone '$z'. Abandon.\n$msg"
	}
    }

    if {! [::pgsql::unlock $dbfd "commit" msg]} then {
	::pgsql::unlock $dbfd "abort" m
	::webapp::error-exit $conf(err) "L'opération a échoué. Abandon.\n$msg"
    }

    #
    # Sortie du résultat
    #

    ::webapp::send html [::webapp::file-subst $conf(page) \
				    [list \
					] \
			    ]

    #
    # Déconnexion de la base
    #

    fermer-base $dbfd
}

::webapp::cgi-exec main %DEBUG%
