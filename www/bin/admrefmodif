#!%TCLSH%

#
# Script to store table modifications
#
# Called by: admrefliste
#
# Parameters (form or url):
#   - type : etabl, commu, hinfo, reseau, domaine, zone, zone4, zone6,
#		groupe
#   - parameters specific to types
#
# History
#   2001/11/01 : pda      : specifications
#   2001/11/02 : pda      : coding
#   2002/05/03 : pda/jean : re-use in webdns
#   2002/05/06 : pda/jean : add users
#   2002/05/21 : pda/jean : add groups
#   2002/05/21 : pda/jean : add communauties
#   2002/07/09 : pda      : add nologin
#   2003/05/13 : pda/jean : use auth base
#   2003/08/12 : pda      : remove users
#   2004/08/06 : pda/jean : add flag dhcp by network
#   2005/04/08 : pda/jean : add table dhcpprofil
#   2007/10/25 : jean     : log modify actions
#   2010/11/16 : pda/jean : ajout table vlan
#   2010/12/09 : pda      : i18n
#   2010/12/09 : pda      : remove groups
#   2010/12/09 : pda      : rewrite with conf() array
#

#
# Template pages used by this script
#

set conf(err)		erreur.html
set conf(page)		admvalide.html

#
# Next actions
# 

set conf(nextaccueil)	"%HOMEURL%/bin/accueil"
set conf(nextadmin)	"%HOMEURL%/bin/admin"
set conf(nextmodif)	"%HOMEURL%/bin/admrefliste"

#
# Script parameters
#

set conf(form)	{
	{type			1 1}
}

set conf(form-etabl) {
	{nom[0-9]+		0 9999}
	{nomn[0-9]+		1 9999}
}

set conf(form-commu) {
	{nom[0-9]+		0 9999}
	{nomn[0-9]+		1 9999}
}

set conf(form-hinfo) {
	{texte[0-9]+		0 9999}
	{tri[0-9]+		0 9999}
	{present[0-9]+		0 9999}

	{texten[0-9]+		1 9999}
	{trin[0-9]+		1 9999}
	{presentn[0-9]+		1 9999}
}

set conf(form-reseau) {
	{nom[0-9]+		0 9999}
	{localisation[0-9]+	0 9999}
	{adr4[0-9]+		0 9999}
	{gw4[0-9]+		0 9999}
	{dhcp[0-9]+		0 9999}
	{adr6[0-9]+		0 9999}
	{gw6[0-9]+		0 9999}
	{idetabl[0-9]+		0 9999}
	{idcommu[0-9]+		0 9999}
	{commentaire[0-9]+	0 9999}

	{nomn[0-9]+		1 9999}
	{localisationn[0-9]+	1 9999}
	{adr4n[0-9]+		1 9999}
	{gw4n[0-9]+		1 9999}
	{dhcpn[0-9]+		0 9999}
	{adr6n[0-9]+		1 9999}
	{gw6n[0-9]+		1 9999}
	{idetabln[0-9]+		1 9999}
	{idcommun[0-9]+		1 9999}
	{commentairen[0-9]+	1 9999}
}

set conf(form-domaine) {
	{nom[0-9]+		0 9999}
	{nomn[0-9]+		1 9999}
}

set conf(form-zone) {
	{domaine[0-9]+		0 9999}
	{prologue[0-9]+		0 9999}
	{rrsup[0-9]+		0 9999}
	{selection[0-9]+	0 9999}

	{domainen[0-9]+		1 9999}
	{prologuen[0-9]+	1 9999}
	{rrsupn[0-9]+		1 9999}
	{selectionn[0-9]+	1 9999}
}

set conf(form-zone4) $conf(form-zone)
set conf(form-zone6) $conf(form-zone)

set conf(form-groupe) {
	{nom[0-9]+		0 9999}
	{admin[0-9]+		0 9999 0}

	{nomn[0-9]+		1 9999}
	{adminn[0-9]+		0 9999 0}
}

set conf(form-dhcpprofil) {
	{nom[0-9]+		0 9999}
	{texte[0-9]+		0 9999}

	{nomn[0-9]+		1 9999}
	{texten[0-9]+		1 9999}
}

set conf(form-vlan) {
	{vlanid[0-9]+		0 9999}
	{descr[0-9]+		0 9999}
	{voip[0-9]+		0 9999}

	{vlanidn[0-9]+		1 9999}
	{descrn[0-9]+		1 9999}
	{voipn[0-9]+		0 9999}
}

set conf(etabl:return) "Return to organization modification"
set conf(etabl:form)		form-etabl
set conf(etabl:spec)		{nom}
set conf(etabl:idnum)		idetabl
set conf(etabl:table)		dns.etablissement

set conf(etabl:return) "Return to community modification"
set conf(etabl:form)		form-commu
set conf(etabl:spec)		{nom}
set conf(etabl:idnum)		idcommu
set conf(etabl:table)		dns.communaute

set conf(hinfo:return) "Return to host information modification"
set conf(hinfo:form)		form-hinfo
set conf(hinfo:spec)		{texte tri present}
set conf(hinfo:idnum)		idhinfo
set conf(hinfo:table)		dns.hinfo

set conf(reseau:return) "Return to network modification"
set conf(reseau:form)		form-reseau
set conf(reseau:spec)		{nom localisation adr4 gw4 dhcp adr6 gw6
					idetabl idcommu commentaire}
set conf(reseau:idnum)		idreseau
set conf(reseau:table)		dns.reseau

set conf(domaine:return) "Return to domain modification"
set conf(domaine:form)		form-domaine
set conf(domaine:spec)		{nom}
set conf(domaine:idnum)		iddom
set conf(domaine:table)		dns.domaine

set conf(zone:return) "Return to zone modification"
set conf(zone:form)		form-zone
set conf(zone:spec)		{domaine prologue rrsup selection}
set conf(zone:idnum)		idzone
set conf(zone:table)		dns.zone_normale

set conf(zone4:return) 		$conf(zone:return)
set conf(zone4:form)		$conf(zone:form)
set conf(zone4:spec)		$conf(zone:spec)
set conf(zone4:idnum)		$conf(zone:idnum)
set conf(zone4:table)		dns.zone_reverse4

set conf(zone6:return) 		$conf(zone:return)
set conf(zone6:form)		$conf(zone:form)
set conf(zone6:spec)		$conf(zone:spec)
set conf(zone6:idnum)		$conf(zone:idnum)
set conf(zone6:table)		dns.zone_reverse6

set conf(dhcpprofil:return) "Return to DHCP profile modification"
set conf(dhcpprofil:form)	form-dhcpprofil
set conf(dhcpprofil:spec)	{nom texte}
set conf(dhcpprofil:idnum)	iddhcpprofil
set conf(dhcpprofil:table)	dns.dhcpprofil

set conf(dhcpprofil:return) "Return to Vlan modification"
set conf(vlan:form)		form-vlan
set conf(vlan:spec)		{vlanid descr voip}
set conf(vlan:idnum)		vlanid
set conf(vlan:table)		topo.vlan

#
# WebDNS general library
#

source %LIBDNS%

# ::webapp::cgidebug ; exit

##############################################################################
# Main procedure
##############################################################################

proc main {} {
    global conf

    #
    # Initialization
    #

    ::dnscontext create d
    d init-cgi "admin" $conf(err) "admin" $conf(form) ftab dbfd login tabuid

    #
    # Form field specification is minimalist: it includes only "type" field
    # A second get-data request will be more precise.
    #

    set type [string trim [lindex $ftab(type) 0]]

    if {! [info exists conf($type:return)]} then {
	d error [format [mc "Type '%s' not supported"] $type]
    }
    set ret [mc $conf($type:return)]

    set formaux $conf($type:form)
    if {[llength [::webapp::get-data ftab $conf($formaux)]] == 0} then {
	d error [mc "Invalid input"]
    }

    #
    # Store modifications in database
    #

    set spec $conf($type:spec)
    set idnum $conf($type:idnum)
    set table $conf($type:table)

    set msg [store-tabular $dbfd $spec $idnum $table ftab]
    if {$msg ne ""} then {
	d error $msg
    }

    d writelog "modref" "modification of table $table"

    #
    # End of script: output page and close database
    #

    d urlset "%URL1%" $conf(nextaccueil) {}
    d urlset "%URL2%" $conf(nextadmin) {}
    d urlset "%URL3%" $conf(nextmodif) [list [list "type" $type]]

    d result $conf(page) [list \
				[list %TYPEENCLAIR% $ret] \

			    ]
}

::webapp::cgi-exec main %DEBUG%
