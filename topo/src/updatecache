#!%TCLSH%

#
# Update entries in cache if necessary or delete them
#
# Syntax:
#	updatecache		(no argument)
#
# History :
#   2011/01/13 : jean : design
#

source %LIBNETMAGIS%

proc main {argv0 argv} {
    global ctxt

    #
    # Initialize parameters
    #

    set ctxt(dbfd1) ""
    set ctxt(dbfd2) ""

    set-log [get-local-conf "logger"]

    config ::dnsconfig
        
    lazy-connect

    set ctxt(maxstatus) [dnsconfig get "topomaxstatus"]

    set r 0

    #
    # Fetch all cache entries
    #

    set-status "Updating cache"
    set topograph  [get-local-conf "topograph"]
    set sql "SELECT key, command, file, hit, runtime FROM topo.cache"
    toposqlselect $sql tab {

	set key $tab(key)
	if {[cache-update-needed tab]} then {

	    #
	    # Run the command and cache the result
	    #

	    set cmd $tab(command)
	    set run $cmd
	    regsub -all {[<>|;'"${}()&\[\]*?]} $run {\\&} run
	    set run "$run < $topograph"
	    set t1 [clock seconds]
	    if {[catch {exec sh -c $run} output]} then {
		puts stderr "updatecache : failed to run command '$run' ($output)"
		set r 1
	    } else {
		set t2 [clock seconds]
		update-cache $cmd $key $output [expr $t2 - $t1]
	    }
	} else {

	    #
	    # Remove cache entry
	    #

	    cache-remove $key
	}
    }

    set-status "Cache update done"

    return $r
}

exit [main $argv0 $argv]
