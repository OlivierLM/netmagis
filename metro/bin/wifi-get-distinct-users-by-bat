#!/usr/bin/perl

# $Id: wifi-get-distinct-users-by-bat,v 1.1.1.1 2008-06-13 08:55:51 pda Exp $
#
# ###################################################################
# boggia : Creation : 04/04/08
#
# renvoie la liste des utilisateurs et de machines distincts entre
# 2 dates pour une liste de bâtiments WiFi
#
# parametres :
# date debut (ex: 2007-01-01 00:00:00)
# date fin (ex: 2008-01-01 00:00:00)
# liste des sites (ex: patio-ap palais-u-ap ...)
# exemple : ./distinct_users_by_bat "2006-01-01 00:00:00" "2007-01-01 00:00:00" palais-u-ap patio-ap portique-ap platane-ap
#

use DBI;

@liste = @ARGV;

# fichier de configuration principal et chargement des focntions de base
our $conf_file = "/local/obj999/etc/obj999.conf";
require "/local/obj999/bin/fonctions-bases-rrd";
#

our $file_maj_sondes = read_conf_file("$conf_file","FILE_METRO_UPDATE_PROBES");
our $file_majMETRO = read_conf_file("$conf_file","FILE_METRO_PROBES");
our $rep_db = read_conf_file("$conf_file","DIR_RRD_DB_METRO");
our $rep_lock = read_conf_file("$conf_file","DIR_LOCK_UPDATE_METRO");
our $rep_bin = read_conf_file("$conf_file","DIR_BIN");
our $rep_sondes = read_conf_file("$conf_file","DIR_BIN_PROBES");
our $rep_majdb = read_conf_file("$conf_file","DIR_PROBES");
our $file_quarantaine = read_conf_file("$conf_file","FILE_METRO_QUARANTINE");
our $dbhost = read_conf_file($conf_file,"MAC_PSQL_SERVER");
our $dbname= read_conf_file($conf_file,"PG_DATABASE_MAC");
our $dbuser= read_conf_file($conf_file,"PG_USER_MAC");
our $dbpass= read_conf_file($conf_file,"PG_PASSWORD_MAC");

$defaultdomain="u-strasbg.fr";

$db =  DBI->connect("dbi:Pg:dbname=$dbname;host=$dbhost", $dbuser, $dbpass )
        or print STDERR "$DBI::errstr";

%liste_users = ();

for($i=2;$i<@liste;$i++)
{
    print "Interroge la base pour le site : $liste[$i]\n";
# ne ferme les session oubliees que du portail captif
    $sql = "SELECT  distinct LOWER(authaccess.login)
        FROM authaccess, eq eq1, eq eq2, sessionauthaccess, assocwifi, sessionassocwifi
        WHERE
        sessionauthaccess.idauthaccess = authaccess.idauthaccess
        AND eq1.ideq = authaccess.ideq
        AND eq2.ideq = assocwifi.ideq
        AND eq2.nom like '$liste[$i]%'
        AND assocwifi.idassocwifi =  sessionassocwifi.idassocwifi
        AND assocwifi.mac = authaccess.mac
        AND (
                abs(extract(epoch from age(sessionauthaccess.debut,sessionassocwifi.debut)))
                 < 300
                    OR
                (sessionauthaccess.debut, sessionauthaccess.fin)
                    overlaps (sessionassocwifi.debut, sessionassocwifi.fin)
                    OR
                abs(extract(epoch from age(sessionauthaccess.fin,sessionassocwifi.fin)))
                 < 300
            )
        AND sessionauthaccess.fin > '$liste[0]'
        AND sessionauthaccess.debut < '$liste[1]'";

    $sql2 = "SELECT  distinct authaccess.mac
        FROM authaccess, eq eq1, eq eq2, sessionauthaccess, assocwifi, sessionassocwifi
        WHERE
        sessionauthaccess.idauthaccess = authaccess.idauthaccess
        AND eq1.ideq = authaccess.ideq
        AND eq2.ideq = assocwifi.ideq
        AND eq2.nom like '$liste[$i]%'
        AND assocwifi.idassocwifi =  sessionassocwifi.idassocwifi
        AND assocwifi.mac = authaccess.mac
        AND (
                abs(extract(epoch from age(sessionauthaccess.debut,sessionassocwifi.debut)))
                 < 300
                    OR
                (sessionauthaccess.debut, sessionauthaccess.fin)
                    overlaps (sessionassocwifi.debut, sessionassocwifi.fin)
                    OR
                abs(extract(epoch from age(sessionauthaccess.fin,sessionassocwifi.fin)))
                 < 300
            )
        AND sessionauthaccess.fin > '$liste[0]'
        AND sessionauthaccess.debut < '$liste[1]'";


    $r = $db->prepare("$sql");
    $s = $db->prepare("$sql2");
    ##########################################################################
    $r->execute or print STDERR "Update : $DBI::errstr";
    $s->execute or print STDERR "Update : $DBI::errstr";
    ##########################################################################
    
    while( $user = $r->fetchrow )
    {
	$liste_users{$user} = 1;
    }

    while( $mac = $s->fetchrow )
    {
        $liste_machines{$mac} = 1;
    }

    $r->finish;	
    $s->finish;
}

$nb_users = 0;
foreach $key (keys %liste_users)
{
    $nb_users ++;
}

$nb_machines = 0;
foreach $key (keys %liste_machines)
{
    $nb_machines ++;
}


print "Nombre d'utilisateurs distincts : $nb_users\n";
print "Nombre de machines distinctes : $nb_machines\n";

