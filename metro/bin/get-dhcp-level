#!/usr/bin/perl

# $Id: get-dhcp-level,v 1.2 2008/06/13 10:16:50 pda Exp $
#
#
# ###################################################################
# boggia : Creation : 27/03/08
#
# Programme de creation et de remplissage de bases rrdtools contenant
# en temps réel le nombres d'adresses IP distribuées par le serveur
# DHCP Osiris pour chaque réseau.
#
#

use DBI ;
use strict ;
use Socket ;
use SNMP_util;

# fichier de configuration principal et chargement des focntions de base
our $conf_file = "%CONF%";
require "%LIBMETRO%";
#

my $snmp_community = read_conf_file("$conf_file","O2_SNMP_COMMUNITY");

my $dhcp_server  = "ns1a.u-strasbg.fr";
my $leases_oid = "1.3.6.1.4.1.2021.8.1.101";
our %tab_net = ();


get_leases_list($dhcp_server,$snmp_community,$leases_oid);


foreach my $key (keys %tab_net)
{
    create_or_update_rrd($key,$tab_net{$key}{"inuse"},$tab_net{$key}{"avail"},$tab_net{$key}{"nom"});
}



# Convertit une adresse ipv4 en entier long
sub ip2number {
    my $ip = pop(@_) ;

    my $s = "0x" ;
    my $o ;
    foreach $o (split (/\./,$ip)) {
        $s = $s . sprintf ("%02X",$o) ;
    }

    return hex($s) ;
}

# fonction qui permet de créer une base RRD Tools 
# et/ou d'insérer des données
sub create_or_update_rrd 
{
    my ($reseau,$inuse,$avail,$nomreseau) = @_;

    my $fichier_index = read_conf_file("$conf_file","FILE_INDEX_GRAPHS");
    my $rep_db = read_conf_file("$conf_file","DIR_RRD_DB");
    my $modele_graphe = read_conf_file("$conf_file","DIR_BIN_MODELS") . "/GaugeDHCPuse";
    my $id;

    $reseau=~s/\//_/;
    $id = "dhcp_$reseau";

    #print "Nom de la base : $id\n";

    # creation ou mise a jour d'une base RRD
    my $nom_fichier_rrd = "$rep_db/DHCP/$id.rrd";
    if(-e $nom_fichier_rrd)
    {
	my $time = time;
	my $modulo_time = $time % 300;
	$time = $time - $modulo_time;
        system("/usr/local/bin/rrdtool update $nom_fichier_rrd $time:$inuse:$avail");
    }
    else
    {
        system("/usr/local/bin/rrdtool create $nom_fichier_rrd DS:inuse:GAUGE:600:U:U DS:avail:GAUGE:600:U:U RRA:AVERAGE:0.5:1:420480 RRA:MAX:0.5:1:420480"); 
	
	# mise à jour du fichier index.graph pour la création du graph
	open(INDEX,$fichier_index);
	my $ligne;
	my $graph_def = 0;

	while($ligne=<INDEX>)
	{
	    if($ligne=~m/^$id;/)
	    {
		$graph_def = 1;
	    }
	}
	close(INDEX);

	if($graph_def == 0)
	{
	    my $ligne_def = "$id;GaugeDHCPuse;1;$nom_fichier_rrd;Baux DHCP : $nomreseau";
	    system("echo \"$ligne_def\" >> $fichier_index");
	}
    }   
}


sub get_leases_list
{
    my ($dhcp_server,$community,$oid) = @_;
 
    my $param = $community."@".$dhcp_server;

    &snmpmapOID("oid_leases",$oid);
    my @liste = &snmpwalk($param, "oid_leases");

    my $t_liste = @liste;
    my $i;
    for($i=0;$i<$t_liste;$i++)
    {
	my ($reste,$ligne)=(split(/:/,$liste[$i]))[0,1];

	chomp $ligne;
	if($ligne =~/(.*);([0-9]+\.[0-9]+\.[0-9]+\.[0-9]+\/[0-9]+);([0-9]+);([0-9]+)/) 
	{
	    $tab_net{$2}{"nom"} = $1;
	    $tab_net{$2}{"inuse"} = $3;
	    $tab_net{$2}{"avail"} = $4;
	}
    }
}
